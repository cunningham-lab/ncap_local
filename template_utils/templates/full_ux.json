{
    "Outputs": {
        "AccessKey0": {
            "Description": "Access Key of user: customgroup2",
            "Value": {
                "Ref": "userkey0"
            }
        },
        "AccessKey1": {
            "Description": "Access Key of user: customgroup2",
            "Value": {
                "Ref": "userkey1"
            }
        },
        "Password0": {
            "Description": "Default password of new user",
            "Value": "530c61f5763b7a7e"
        },
        "Password1": {
            "Description": "Default password of new user",
            "Value": "35b6141b89a2d513"
        },
        "SecretAccessKey0": {
            "Description": "Secret Key of new user: customgroup2",
            "Value": {
                "Fn::GetAtt": [
                    "userkey0",
                    "SecretAccessKey"
                ]
            }
        },
        "SecretAccessKey1": {
            "Description": "Secret Key of new user: customgroup2",
            "Value": {
                "Fn::GetAtt": [
                    "userkey1",
                    "SecretAccessKey"
                ]
            }
        }
    },
    "Resources": {
        "LambdaBaseRole": {
            "Properties": {
                "Description": {
                    "Fn::Join": [
                        " ",
                        [
                            "Base Policy for all lambda function roles in",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:aws:logs:*:*:*"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            },
            "Type": "AWS::IAM::ManagedPolicy"
        },
        "S3MakePathRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "LambdaBaseRole"
                    }
                ],
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:DeleteObject",
                                        "s3:ListBucket",
                                        "s3:PutObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "write_s3_policy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "S3PutObject": {
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "S3PutObjectFunction",
                        "Arn"
                    ]
                },
                "bucket": "customgroup2",
                "key": "test/"
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },
        "S3PutObjectFunction": {
            "Properties": {
                "CodeUri": "s3://com.gilt.public.backoffice/lambda_functions/cloudformation-helpers.zip",
                "Description": "Puts Objects in S3",
                "Handler": "aws/s3.putObject",
                "Role": {
                    "Fn::GetAtt": [
                        "S3MakePathRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs10.x",
                "Timeout": 30
            },
            "Type": "AWS::Serverless::Function"
        },
        "UserBucketcustomgroup2": {
            "Properties": {
                "AccessControl": "Private",
                "BucketName": "customgroup2"
            },
            "Type": "AWS::S3::Bucket"
        },
        "UserGroupcustomgroup2": {
            "Properties": {
                "GroupName": "customgroup2group",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": "s3:GetBucketLocation",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor0"
                                },
                                {
                                    "Action": "s3:HeadBucket",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor3"
                                },
                                {
                                    "Action": "s3:ListAllMyBuckets",
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Sid": "VisualEditor1"
                                },
                                {
                                    "Action": "s3:*",
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::customgroup2/*",
                                        "arn:aws:s3:::customgroup2"
                                    ],
                                    "Sid": "VisualEditor2"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "customgroup2policy"
                    }
                ]
            },
            "Type": "AWS::IAM::Group"
        },
        "Users": {
            "Properties": {
                "GroupName": {
                    "Ref": "UserGroupcustomgroup2"
                },
                "Users": [
                    {
                        "Ref": "customgroup2user0"
                    },
                    {
                        "Ref": "customgroup2user1"
                    }
                ]
            },
            "Type": "AWS::IAM::UserToGroupAddition"
        },
        "customgroup2user0": {
            "Properties": {
                "LoginProfile": {
                    "Password": "530c61f5763b7a7e",
                    "PasswordResetRequired": "false"
                }
            },
            "Type": "AWS::IAM::User"
        },
        "customgroup2user1": {
            "Properties": {
                "LoginProfile": {
                    "Password": "35b6141b89a2d513",
                    "PasswordResetRequired": "false"
                }
            },
            "Type": "AWS::IAM::User"
        },
        "userkey0": {
            "Properties": {
                "UserName": {
                    "Ref": "customgroup2user0"
                }
            },
            "Type": "AWS::IAM::AccessKey"
        },
        "userkey1": {
            "Properties": {
                "UserName": {
                    "Ref": "customgroup2user1"
                }
            },
            "Type": "AWS::IAM::AccessKey"
        }
    },
    "Transform": "AWS::Serverless-2016-10-31"
}
